<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- mapping to the Java DataBaseMappae class written in the namespace indicated -->
<mapper namespace="com.xu.database.Mapper">
    <resultMap id="userMap" type="com.xu.struct.User">
        <result column="first_name" property="first_name"/>
        <result column="id" property="id"/>
        <result column="last_name" property="last_name" />
        <result column="email" property="email"/>
    </resultMap>
    <resultMap id="projectMap" type="com.xu.struct.Project">
        <result column="id" property="id" />
        <result column="project_name" property="name" />
        <result column="user_id" property="user_id" />
    </resultMap>
    <resultMap id="sessionMap" type="com.xu.struct.Session">
        <result column="id" property="id"/>
        <result column="start_time" property="start_time"/>
        <result column="end_time" property="end_time"/>
        <result column="user_id" property="user_id"/>
        <result column="project_id" property="project_id"/>
        <result column="counter" property="counter"/>
    </resultMap>

    <insert id="createUser">
        INSERT INTO USERS (first_name, last_name, email) VALUES (#{firstname}, #{lastname}, #{email})
    </insert>

    <update id="updateUser">
        UPDATE USERS SET first_name=#{firstname}, last_name=#{lastname} WHERE id=#{id}
    </update>

    <select id="getUser" resultMap="userMap">
        SELECT * FROM USERS WHERE id=#{id}
    </select>

    <update id="deleteUser">
        DELETE FROM USERS WHERE id=#{id}
    </update>

    <select id="getAllEmails" resultType="String">
        SELECT email from USERS
    </select>

    <select id="getUserByEmail" resultMap="userMap">
        select * from USERS WHERE email=#{email}
    </select>


    <insert id="createProject">
        INSERT INTO PROJECTS (project_name, user_id) VALUES (#{name}, #{uid})
    </insert>

    <update id="updateProject">
        UPDATE PROJECTS SET project_name=#{name} WHERE user_id=#{uid} AND id=#{pid}
    </update>

    <update id="deleteProject">
        DELETE FROM PROJECTS WHERE user_id=#{uid} AND id=#{pid}
    </update>

    <select id="getProject" resultMap="projectMap">
        SELECT * FROM PROJECTS WHERE user_id=#{uid} AND id=#{pid}
    </select>

    <select id="getAllProjects" resultMap="projectMap">
        SELECT * FROM PROJECTS WHERE user_id=#{uid}
    </select>

    <select id="getProjectByName" resultMap="projectMap">
        SELECT * FROM PROJECTS WHERE user_id=#{uid} AND project_name=#{name}
    </select>

    <select id="getAllProjectName" resultType="String">
        SELECT project_name FROM PROJECTS WHERE user_id=#{uid}
    </select>

    <select id="getAllUsers" resultMap="userMap">
        SELECT * FROM USERS
    </select>

    <insert id="createSession">
        INSERT INTO SESSIONS (start_time, end_time, counter, user_id, project_id) VALUES (#{start_time}, #{end_time}, #{counter}, #{uid}, #{pid})
    </insert>

    <update id="updateSession">
        UPDATE SESSIONS SET start_time=#{start_time}, end_time=#{end_time}, counter=#{counter} WHERE user_id=#{uid} AND project_id=#{pid} AND id=#{sid}
    </update>

    <select id="getSession" resultMap="sessionMap">
        SELECT * FROM SESSIONS WHERE user_id=#{uid} AND project_id=#{pid} AND id=#{sid}
    </select>

    <select id="getAllSessions" resultMap="sessionMap">
        SELECT * FROM SESSION WHERE user_id=#{uid} AND project_id=#{pid}
    </select>

    <update id="deleteAllUsers">
        DELETE FROM USERS, PROJECTS, SESSIONS
    </update>
</mapper>